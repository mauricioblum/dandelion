{"version":3,"sources":["assets/monograma-logo.png","src/contexts/appContext.tsx","src/theme/index.ts","src/components/Button/styles.ts","src/components/Button/index.tsx","src/screens/Home/styles.ts","src/screens/Home/index.tsx","src/theme/components.ts","src/screens/SongRequest/styles.ts","src/services/alertService.ts","src/screens/SongRequest/index.tsx","src/screens/Settings/index.tsx","src/screens/MySongs/styles.ts","src/screens/MySongs/index.tsx","src/screens/DJScreen/styles.ts","src/screens/DJScreen/index.tsx","src/routes.tsx","src/services/firebase.ts","App.tsx"],"names":["module","exports","AppContext","React","useAppContext","AppProvider","children","rest","mode","setMode","Provider","value","theme","setTheme","lightTheme","colors","main","secondary","background","text","textInverted","darkTheme","StyledButton","styled","Pressable","attrs","elevation","props","ButtonText","Text","Button","onPress","title","marginVertical","style","Container","View","SongLabel","SongCopy","SettingsView","Home","navigation","iconColor","useAuthState","firebase","auth","user","useObjectVal","database","ref","loading","StatusBar","navigate","Feather","color","name","size","Image","source","monogram","width","height","ActivityIndicator","marginBottom","Form","Label","Input","TextInput","alertMessage","message","buttons","options","Platform","OS","alert","Alert","SongRequest","useState","setName","artist","setArtist","artistInputRef","useRef","handleRequestSong","song","isPlaying","userId","uid","push","error","cancelable","onChangeText","autoCapitalize","autoCorrect","returnKeyType","onEndEditing","current","focus","Settings","isDJ","setIsDJ","useEffect","addListener","SongWrapper","SongTitle","MySongs","useListVals","keyField","songs","userSongs","filter","FlatList","data","keyExtractor","songId","marginTop","ListEmptyComponent","renderItem","item","remove","err","console","log","handleDeleteSong","ActionsView","DJScreen","input","setInput","authorized","setAuthorized","setError","login","a","async","Error","marginRight","requestsRef","set","currSongError","child","handlePlaySong","FontAwesome","url","encodeURI","window","open","Linking","handleSearchSong","handleRemoveSong","onSubmitEditing","Stack","createStackNavigator","Routes","getHeaderColors","NavigationContainer","Navigator","screenOptions","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","headerBackTitleStyle","Screen","component","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","apps","length","app","initializeApp","signInAnonymously"],"mappings":"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","file":"static/js/app.35b98c4e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/monograma-logo.6b544e28.png\";","/* eslint-disable no-unused-vars */\nimport * as React from 'react';\n\nexport type Theme = 'light' | 'dark';\nexport interface AppContextProps {\n  setTheme: (theme: Theme) => void;\n  theme: Theme;\n}\n\nexport const AppContext = React.createContext<AppContextProps>(\n  {} as AppContextProps,\n);\nexport const useAppContext = () => {\n  return React.useContext(AppContext);\n};\n\nconst AppProvider: React.FC = ({ children, ...rest }) => {\n  const [mode, setMode] = React.useState<Theme>('light');\n\n  const setTheme = (theme: Theme) => {\n    setMode(theme);\n  };\n\n  return (\n    <AppContext.Provider value={{ ...rest, theme: mode, setTheme }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppProvider;\n","import { DefaultTheme } from 'styled-components/native';\n\nconst lightTheme: DefaultTheme = {\n  colors: {\n    main: '#4F6758',\n    secondary: '#9F4D5D',\n    background: '#FFF4F0',\n    text: '#3f3f3f',\n    textInverted: '#fff',\n  },\n};\n\nconst darkTheme: DefaultTheme = {\n  colors: {\n    main: '#4F6758',\n    secondary: '#9F4D5D',\n    background: '#282A36',\n    text: '#fff',\n    textInverted: '#FFF4F0',\n  },\n};\n\nexport { lightTheme, darkTheme };\n","import styled from 'styled-components/native';\n\nexport const StyledButton = styled.Pressable.attrs({\n  elevation: 3,\n})`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 12px 24px;\n  border-radius: 6px;\n  min-width: 180px;\n  background-color: ${(props) => props.theme.colors.main};\n`;\n\nexport const ButtonText = styled.Text`\n  font-size: 16px;\n  text-align: center;\n  font-weight: bold;\n  color: ${(props) => props.theme.colors.textInverted};\n`;\n","import React from 'react';\nimport { StyledButton, ButtonText } from './styles';\n\ninterface ButtonProps {\n  onPress: () => void;\n  title?: string;\n  marginVertical?: number;\n}\n\nexport const Button: React.FC<ButtonProps> = (props) => {\n  const { onPress, title = 'Save', marginVertical } = props;\n  return (\n    <StyledButton\n      onPress={onPress}\n      style={{\n        marginVertical,\n      }}\n    >\n      <ButtonText>{title}</ButtonText>\n    </StyledButton>\n  );\n};\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n  flex: 1;\n  background: ${(props) => props.theme.colors.background};\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Title = styled.Text`\n  font-size: 24px;\n  color: ${(props) => props.theme.colors.text};\n`;\n\nexport const SongLabel = styled.Text`\n  font-size: 18px;\n  color: ${(props) => props.theme.colors.text};\n  margin-top: 10px;\n`;\n\nexport const SongCopy = styled.Text`\n  font-size: 28px;\n  font-weight: bold;\n  color: ${(props) => props.theme.colors.main};\n`;\n\nexport const SettingsView = styled.View`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n`;\n","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { ActivityIndicator, Pressable, Image } from 'react-native';\nimport firebase from 'firebase/app';\nimport { useObjectVal } from 'react-firebase-hooks/database';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { Feather } from '@expo/vector-icons';\nimport { Button } from '../../components/Button';\nimport { useAppContext } from '../../contexts/appContext';\nimport { NavigationProps } from '../../types';\nimport { Container, SettingsView, SongLabel, SongCopy } from './styles';\nimport monogram from '../../../assets/monograma-logo.png';\n\ninterface HomeProps extends NavigationProps {}\n\nexport const Home: React.FC<HomeProps> = ({ navigation }) => {\n  const { theme } = useAppContext();\n\n  const iconColor = theme === 'dark' ? '#fff' : '#000';\n\n  const [user] = useAuthState(firebase.auth());\n\n  const [value, loading] = useObjectVal(firebase.database().ref('currentSong'));\n\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <StatusBar style={theme === 'dark' ? 'light' : 'dark'} />\n      <SettingsView>\n        <Pressable onPress={() => navigation.navigate('Settings')}>\n          <Feather color={iconColor} name=\"settings\" size={28} />\n        </Pressable>\n      </SettingsView>\n      <Image source={monogram} style={{ width: 200, height: 200 }} />\n      <SongLabel>Tocando agora:</SongLabel>\n      {loading ? (\n        <ActivityIndicator\n          style={{\n            marginBottom: 48,\n          }}\n          size=\"large\"\n          color=\"#4F6758\"\n        />\n      ) : (\n        <SongCopy\n          style={{\n            marginBottom: 48,\n          }}\n        >\n          {value}\n        </SongCopy>\n      )}\n\n      <Button\n        title=\"Pedir música\"\n        marginVertical={10}\n        onPress={() => navigation.navigate('SongRequest')}\n      />\n\n      <Button\n        title=\"Meus pedidos\"\n        marginVertical={10}\n        onPress={() => navigation.navigate('MySongs')}\n      />\n    </Container>\n  );\n};\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n  flex: 1;\n  background: ${(props) => props.theme.colors.background};\n  align-items: center;\n  justify-content: center;\n  padding: 16px;\n`;\n\nexport const Title = styled.Text`\n  font-size: 24px;\n  color: ${(props) => props.theme.colors.text};\n`;\n","import styled from 'styled-components/native';\n\nexport const Form = styled.View`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Label = styled.Text`\n  font-size: 22px;\n  font-weight: bold;\n  color: ${(props) => props.theme.colors.text};\n  margin-bottom: 4px;\n`;\n\nexport const Input = styled.TextInput`\n  border-width: 1px;\n  border-color: ${(props) => props.theme.colors.main};\n  padding: 5px 10px;\n  height: 40px;\n  width: 220px;\n  color: ${(props) => props.theme.colors.text};\n  font-size: 18px;\n  border-radius: 6px;\n  margin-bottom: 20px;\n`;\n","/* eslint-disable no-undef */\n/* eslint-disable no-alert */\nimport { Alert, Platform } from 'react-native';\n\nexport function alertMessage(\n  title: string,\n  message?: string,\n  buttons?: any,\n  options?: any,\n) {\n  if (Platform.OS === 'web') {\n    if (message) {\n      alert(`${title}\\n${message}`);\n    } else {\n      alert(title);\n    }\n  } else {\n    Alert.alert(title, message, buttons, options);\n  }\n}\n","import React, { useState, useRef } from 'react';\nimport firebase from 'firebase/app';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { Container } from '../../theme/components';\nimport { Button } from '../../components/Button';\nimport { Form, Label, Input } from './styles';\nimport { alertMessage } from '../../services/alertService';\n\nexport const SongRequest: React.FC = () => {\n  const [name, setName] = useState('');\n  const [artist, setArtist] = useState('');\n  const artistInputRef = useRef<any>(null);\n  const [user] = useAuthState(firebase.auth());\n\n  const handleRequestSong = () => {\n    if (name === '') {\n      alertMessage('Escreva pelo menos o nome da música!!!');\n      return;\n    }\n\n    if (!user) {\n      alertMessage('Usuário não autenticado!');\n      return;\n    }\n\n    const song = {\n      name,\n      artist,\n      isPlaying: false,\n      userId: user.uid,\n    };\n\n    const requestsRef = firebase.database().ref(`requests`);\n\n    requestsRef.push(song, (error) => {\n      if (error) {\n        alertMessage('Erro ao salvar seu pedido, tente novamente');\n      } else {\n        setName('');\n        setArtist('');\n        alertMessage(\n          'Pedido efetuado com sucesso',\n          'O DJ já recebeu o seu pedido',\n          [\n            {\n              text: 'OK',\n              onPress: () => {},\n            },\n          ],\n          { cancelable: false },\n        );\n      }\n    });\n  };\n\n  return (\n    <Container>\n      <Form>\n        <Label>Nome da música</Label>\n        <Input\n          onChangeText={(text) => setName(text)}\n          autoCapitalize=\"words\"\n          autoCorrect={false}\n          value={name}\n          returnKeyType=\"next\"\n          onEndEditing={() => {\n            if (artistInputRef.current) {\n              artistInputRef.current.focus();\n            }\n          }}\n        />\n        <Label>Artista / Banda</Label>\n        <Input\n          ref={artistInputRef}\n          onChangeText={(text) => setArtist(text)}\n          autoCapitalize=\"words\"\n          autoCorrect={false}\n          value={artist}\n          returnKeyType=\"send\"\n          onEndEditing={handleRequestSong}\n        />\n        <Button title=\"Pedir\" marginVertical={10} onPress={handleRequestSong} />\n      </Form>\n    </Container>\n  );\n};\n","import React, { useState } from 'react';\nimport { Button } from '../../components/Button';\nimport { Container } from '../../theme/components';\nimport { NavigationProps } from '../../types';\n\ninterface SettingsProps extends NavigationProps {}\n\nexport const Settings: React.FC<SettingsProps> = ({ navigation }) => {\n  const [isDJ, setIsDJ] = useState(false);\n\n  React.useEffect(() => {\n    const unsubscribe = navigation.addListener('focus', () => {\n      setIsDJ(false);\n    });\n\n    return unsubscribe;\n  }, [navigation]);\n\n  return (\n    <Container>\n      {isDJ ? (\n        <Button\n          title=\"Desvincular DJ\"\n          onPress={() => {\n            setIsDJ(false);\n          }}\n        />\n      ) : (\n        <Button\n          title=\"Sou DJ\"\n          marginVertical={8}\n          onPress={() => {\n            setIsDJ(true);\n            navigation.navigate('DJScreen');\n          }}\n        />\n      )}\n    </Container>\n  );\n};\n","import styled from 'styled-components/native';\n\nexport const SongWrapper = styled.View`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  min-width: 250px;\n  width: 100%;\n  overflow: hidden;\n  padding: 12px 8px;\n  border: 1px solid ${(props) => props.theme.colors.main};\n  border-radius: 6px;\n  margin-bottom: 6px;\n  background: #fff;\n`;\n\nexport const SongTitle = styled.Text`\n  font-size: 18px;\n  font-weight: bold;\n  color: ${(props) => props.theme.colors.main};\n  margin-right: 16px;\n  max-width: 85%;\n`;\n","import React from 'react';\nimport { Pressable, FlatList } from 'react-native';\nimport firebase from 'firebase/app';\nimport { useListVals } from 'react-firebase-hooks/database';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { Feather } from '@expo/vector-icons';\nimport { Container } from '../../theme/components';\nimport { SongTitle, SongWrapper } from './styles';\nimport { Song } from '../../types';\n\nexport const MySongs: React.FC = () => {\n  const [songs] = useListVals<Song>(firebase.database().ref('requests'), {\n    keyField: 'songId',\n  });\n\n  const [user] = useAuthState(firebase.auth());\n\n  const handleDeleteSong = (songId: string) => {\n    try {\n      firebase.database().ref(`requests/${songId}`).remove();\n    } catch (err) {\n      console.log('error removing song', err);\n    }\n  };\n\n  if (!user || !songs) {\n    return null;\n  }\n\n  const userSongs = songs.filter((song) => song.userId === user.uid);\n\n  return (\n    <Container>\n      <FlatList\n        data={userSongs}\n        keyExtractor={(song) => song.songId}\n        style={{ marginTop: 10, width: '100%' }}\n        ListEmptyComponent={\n          <SongTitle>Você ainda não fez nenhum pedido.</SongTitle>\n        }\n        renderItem={({ item: song }) => (\n          <SongWrapper>\n            <SongTitle>\n              {song.name} - {song.artist}\n            </SongTitle>\n            <Pressable onPress={() => handleDeleteSong(song.songId)}>\n              <Feather name=\"trash-2\" size={20} />\n            </Pressable>\n          </SongWrapper>\n        )}\n      />\n    </Container>\n  );\n};\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n  flex: 1;\n  background: ${(props) => props.theme.colors.background};\n  align-items: center;\n  justify-content: center;\n  padding: 16px;\n`;\n\nexport const Label = styled.Text`\n  font-size: 22px;\n  font-weight: bold;\n  color: ${(props) => props.theme.colors.text};\n  margin-bottom: 4px;\n  text-align: center;\n`;\n\nexport const SongWrapper = styled.View`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  overflow: hidden;\n  padding: 12px 8px;\n  border: 1px solid ${(props) => props.theme.colors.main};\n  border-radius: 6px;\n  margin-bottom: 6px;\n  background: #fff;\n`;\n\nexport const ActionsView = styled.View`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const SongTitle = styled.Text`\n  font-size: 18px;\n  font-weight: bold;\n  color: ${(props) => props.theme.colors.main};\n  margin-right: 16px;\n  max-width: 55%;\n`;\n","import { FontAwesome } from '@expo/vector-icons';\nimport * as Linking from 'expo-linking';\nimport firebase from 'firebase/app';\nimport React, { useEffect, useState } from 'react';\nimport { useListVals } from 'react-firebase-hooks/database';\nimport { FlatList, Platform, Pressable } from 'react-native';\nimport { Button } from '../../components/Button';\nimport { alertMessage } from '../../services/alertService';\nimport { NavigationProps, Song } from '../../types';\nimport { Input } from '../SongRequest/styles';\nimport {\n  ActionsView,\n  Container,\n  Label,\n  SongTitle,\n  SongWrapper,\n} from './styles';\n\nconst DJLoginPassword = '@fm18122021';\n\ninterface DJScreenProps extends NavigationProps {}\n\nconst DJScreen: React.FC<DJScreenProps> = ({ navigation }) => {\n  const [songs] = useListVals<Song>(firebase.database().ref('requests'), {\n    keyField: 'songId',\n  });\n\n  const [input, setInput] = useState('');\n  const [authorized, setAuthorized] = useState(false);\n  const [error, setError] = useState(false);\n\n  const login = async () => {\n    setError(false);\n    try {\n      if (input === DJLoginPassword) {\n        setAuthorized(true);\n      } else {\n        throw new Error('Senha incorreta');\n      }\n    } catch (err) {\n      setError(true);\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    if (error) {\n      alertMessage(\n        'Senha incorreta',\n        'Tente novamente',\n        [\n          {\n            text: 'OK',\n            onPress: () => {\n              setInput('');\n            },\n          },\n        ],\n        { cancelable: true },\n      );\n    }\n  }, [error]);\n\n  const handlePlaySong = (song: Song) => {\n    const requestsRef = firebase.database().ref(`requests`);\n    const currentSongRef = firebase.database().ref(`currentSong`);\n\n    currentSongRef.set(`${song.name} - ${song.artist}`, (currSongError) => {\n      if (currSongError) {\n        alertMessage('Erro ao tocar música atual, tente novamente');\n      } else {\n        requestsRef.child(song.songId).remove();\n      }\n    });\n  };\n\n  const handleRemoveSong = (song: Song) => {\n    const requestsRef = firebase.database().ref(`requests`);\n\n    requestsRef.child(song.songId).remove();\n  };\n\n  const handleSearchSong = (song: Song) => {\n    const url = `https://open.spotify.com/search/${encodeURI(\n      `${song.name} ${song.artist}`,\n    )}`;\n    if (Platform.OS === 'web') {\n      // eslint-disable-next-line no-undef\n      window.open(url, 'spotifywindow');\n    } else {\n      Linking.openURL(url);\n    }\n  };\n\n  return (\n    <Container>\n      {authorized ? (\n        <>\n          <Label>Bem-vindo!</Label>\n          <Label>\n            Clique no Play para mostrar o pedido no painel, ou no X para remover\n          </Label>\n\n          <FlatList\n            data={songs}\n            style={{ marginTop: 20, width: '100%' }}\n            ListEmptyComponent={\n              <SongTitle>Nenhum pedido registrado.</SongTitle>\n            }\n            keyExtractor={(song) => song.songId}\n            renderItem={({ item: song }) => (\n              <SongWrapper>\n                <SongTitle>\n                  {song.name} - {song.artist}\n                </SongTitle>\n                <ActionsView>\n                  <Pressable\n                    style={{ marginRight: 14 }}\n                    onPress={() => handlePlaySong(song)}\n                  >\n                    <FontAwesome color=\"#b305ca\" name=\"play-circle\" size={40} />\n                  </Pressable>\n                  <Pressable\n                    style={{ marginRight: 14 }}\n                    onPress={() => handleSearchSong(song)}\n                  >\n                    <FontAwesome color=\"#057738\" name=\"spotify\" size={40} />\n                  </Pressable>\n                  <Pressable onPress={() => handleRemoveSong(song)}>\n                    <FontAwesome color=\"#b90505\" name=\"trash\" size={40} />\n                  </Pressable>\n                </ActionsView>\n              </SongWrapper>\n            )}\n          />\n\n          <Button\n            title=\"Sair\"\n            marginVertical={4}\n            onPress={() => {\n              navigation.navigate('Home');\n            }}\n          />\n        </>\n      ) : (\n        <>\n          <Label>Digite a senha para liberar acesso de DJ.</Label>\n          <Input\n            onChangeText={(text) => setInput(text)}\n            autoCorrect={false}\n            value={input}\n            returnKeyType=\"default\"\n            onSubmitEditing={() => {\n              login();\n            }}\n          />\n          <Button title=\"Validar\" marginVertical={4} onPress={login} />\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default DJScreen;\n","import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { ThemeProvider } from 'styled-components/native';\n\nimport { lightTheme, darkTheme } from './theme';\n\nimport { Home } from './screens/Home';\nimport { SongRequest } from './screens/SongRequest';\nimport { Settings } from './screens/Settings';\nimport { MySongs } from './screens/MySongs';\nimport { useAppContext } from './contexts/appContext';\nimport { RootStackParamList } from './types';\nimport DJScreen from './screens/DJScreen';\n\nconst Stack = createStackNavigator<RootStackParamList>();\n\nconst Routes: React.FC = () => {\n  const { theme } = useAppContext();\n\n  const getHeaderColors = () => {\n    if (theme === 'dark') {\n      return {\n        background: '#282A36',\n        text: '#fff',\n      };\n    }\n    return {\n      background: '#FFF4F0',\n      text: '#333',\n    };\n  };\n\n  return (\n    <ThemeProvider theme={theme === 'dark' ? darkTheme : lightTheme}>\n      <NavigationContainer>\n        <Stack.Navigator\n          screenOptions={{\n            headerStyle: {\n              backgroundColor: getHeaderColors().background,\n            },\n            headerTintColor: getHeaderColors().text,\n            headerTitleStyle: {\n              color: getHeaderColors().text,\n            },\n            headerBackTitleStyle: {\n              backgroundColor: getHeaderColors().background,\n            },\n          }}\n        >\n          <Stack.Screen\n            name=\"Home\"\n            component={Home}\n            options={{\n              title: 'Casamento Maurício e Flávia',\n            }}\n          />\n          <Stack.Screen\n            name=\"SongRequest\"\n            component={SongRequest}\n            options={{\n              title: 'Pedir Música',\n            }}\n          />\n          <Stack.Screen\n            name=\"MySongs\"\n            component={MySongs}\n            options={{\n              title: 'Meus pedidos',\n            }}\n          />\n          <Stack.Screen\n            name=\"Settings\"\n            component={Settings}\n            options={{\n              title: 'Configurações',\n            }}\n          />\n          <Stack.Screen\n            name=\"DJScreen\"\n            component={DJScreen}\n            options={{\n              title: 'DJ Menu',\n            }}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </ThemeProvider>\n  );\n};\n\nexport default Routes;\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyAQ_cMkysBqb6AvTRkE6HQt1OGwiN8WITI',\n  authDomain: 'dandelion-fm2226.firebaseapp.com',\n  databaseURL: 'https://dandelion-fm2226-default-rtdb.firebaseio.com',\n  projectId: 'dandelion-fm2226',\n  storageBucket: 'dandelion-fm2226.appspot.com',\n  messagingSenderId: '426822046150',\n  appId: '1:426822046150:web:53e3c6f74a60dafaf3e2c7',\n  measurementId: 'G-TN20P7GL0L',\n};\n\nconst login = async () => {\n  try {\n    await firebase.auth().signInAnonymously();\n  } catch (err) {\n    console.log('err');\n  }\n};\n\nexport function initFirebase() {\n  if (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n  } else {\n    firebase.app();\n  }\n  login();\n}\n","import React from 'react';\nimport AppProvider from './src/contexts/appContext';\nimport Routes from './src/routes';\nimport { initFirebase } from './src/services/firebase';\n\ninitFirebase();\n\nexport default function App() {\n  return (\n    <AppProvider>\n      <Routes />\n    </AppProvider>\n  );\n}\n"],"sourceRoot":""}